const { Telegraf, Markup } = require('telegraf');
const gamesData = require('./games.json');

const bot = new Telegraf('7928615793:AAE3IktbE-rYlUEXTcV_yTKwfeXAQ_zV-no');

const userLanguages = {};
let isUnderMaintenance = false;

const YOUR_ADMIN_ID = 5339012301;

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ç–µ—Ö.—Ä–∞–±–æ—Ç
bot.command('maintenance', (ctx) => {
  const adminId = ctx.from.id;
  if (adminId === YOUR_ADMIN_ID) {
    isUnderMaintenance = !isUnderMaintenance;
    ctx.reply(`–†–µ–∂–∏–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç ${isUnderMaintenance ? '–≤–∫–ª—é—á—ë–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω'}.`);
  } else {
    ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
bot.start((ctx) => {
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –∏–≥—Ä—ã.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:', Markup.inlineKeyboard([
    Markup.button.callback('–†—É—Å—Å–∫–∏–π', 'set_lang_ru'),
    Markup.button.callback('Az…ôrbaycan', 'set_lang_az')
  ]));
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
bot.action('set_lang_ru', (ctx) => {
  userLanguages[ctx.chat.id] = 'ru';
  ctx.reply('–ù—É —á—Ç–æ, —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤—ã–±—Ä–∞–Ω! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∏–ª–∏ —Å–ª–æ—Ç, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É, –≥–¥–µ –µ—ë –Ω–∞–π—Ç–∏.');
});

bot.action('set_lang_az', (ctx) => {
  userLanguages[ctx.chat.id] = 'az';
  ctx.reply('Az…ôrbaycan dili se√ßildi! Provayder v…ô ya oyunun adƒ±nƒ± yaz, v…ô m…ôn s…ôn…ô onu taparam!');
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ—Ö.—Ä–∞–±–æ—Ç—ã
bot.use((ctx, next) => {
  if (isUnderMaintenance) {
    ctx.reply('‚öôÔ∏è –ë–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑-–∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    return;
  }
  return next();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', (ctx) => {
  const lang = userLanguages[ctx.chat.id];
  if (!lang) {
    ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ —Å–Ω–∞—á–∞–ª–∞.');
    return;
  }

  const providers = gamesData[lang]?.providers;
  if (!providers) {
    ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞.');
    return;
  }

  const userInput = ctx.message.text.trim().toLowerCase();
  console.log(`–ü–æ–∏—Å–∫ –¥–ª—è: ${userInput}`);

  const providerGames = providers[userInput];
  if (providerGames) {
    const gamesLinks = providerGames.map(game => {
      const gameNameFormatted = game.replace(/\s+/g, '-').toLowerCase();
      return `https://www.pin-up191.com/az/casino/provider/${userInput}/${gameNameFormatted}?mode=real`;
    }).join('\n');

    const message = lang === 'ru' 
      ? `–í–æ—Ç –∏–≥—Ä—ã –æ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ ${userInput}! üéÆ\n\n${gamesLinks}` 
      : `Bu provayderin oyunlarƒ±! üéÆ\n\n${gamesLinks}`;

    ctx.reply(message);
  } else {
    const gameFound = Object.keys(providers).find(provider => 
      providers[provider].some(game => game.toLowerCase() === userInput)
    );

    if (gameFound) {
      const gameLink = `https://www.pin-up191.com/az/casino/provider/${gameFound}/${userInput.replace(/\s+/g, '-').toLowerCase()}?mode=real`;
      const message = lang === 'ru' 
        ? `–í–æ—Ç —Ç–≤–æ—è –∏–≥—Ä–∞! üéØ: ${gameLink}` 
        : `Oyunun linki burada! üéØ: ${gameLink}`;

      ctx.reply(message);
    } else {
      const message = lang === 'ru' 
        ? '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∏–ª–∏ –∏–≥—Ä—É. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º.' 
        : 'Provayder v…ô ya oyun tapƒ±lmadƒ±. Yenid…ôn d√ºzg√ºn adla c…ôhd edin.';
      ctx.reply(message);
    }
  }
});

// –£–¥–∞–ª—è–µ–º webhook –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
// –£–¥–∞–ª—è–µ–º webhook –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
(async () => {
  try {
    await bot.telegram.deleteWebhook(); // –æ—Ç–∫–ª—é—á–∞–µ–º webhook
    await bot.launch(); // –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç —á–µ—Ä–µ–∑ polling
    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ polling');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error);
  }
})();

